spring.application.name=spring-demo
spring.main.banner-mode=off
server.shutdown=graceful
spring.mvc.servlet.load-on-startup=1
#Jackson config
spring.jackson.serialization.fail-on-unwrapped-type-identifiers=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.mapper.default-view-inclusion=true
# Actuator, metrics
management.endpoints.web.exposure.include=health,prometheus
management.metrics.enable.hikaricp=false
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.endpoint.health.probes.enabled=true
# TODO: HTTP client metrics would be useful, but `DefaultWebClientExchangeTagsProvider` unfortunately generates too many
# tag combinations in our case. Use of URI template can significantly lower their amount, but e.g. `organizationUri`
# still contains `host` which may be on-prem and organization/collection at the beginning of `path`. Parsing followed by
# formatting with templates would require non-trivial code and may be error prone. There is not only `host` but also
# `port`, optionally `user` and `password` - just too many combinations. Better solution would be probably to implement
# custom `MetricsWebClientCustomizer` and replace the default one.
management.metrics.enable.http.client=false
management.metrics.enable.http.server=true
management.metrics.enable.jdbc=false
management.metrics.enable.jvm=true
management.metrics.enable.kafka=false
management.metrics.enable.logback=true
management.metrics.enable.process=true
management.metrics.enable.spring.kafka=false
management.metrics.enable.system=true
management.metrics.enable.tomcat=false
# Logging
logging.level.org.apache.kafka.clients.FetchSessionHandler=WARN
logging.level.org.apache.kafka.clients.producer.ProducerConfig=ERROR
logging.level.com.productboard.common.kafka.CallContextConsumerInterceptor=WARN
logging.level.org.springframework.kafka.requestreply.ReplyingKafkaTemplate=ERROR
# Disable annoying warnings about produce errors due to `NetworkException: The server disconnected before
# a response was received.` The failed requests will be retried. See INTJIRA-449 for details.
logging.level.org.apache.kafka.clients.producer.internals.Sender=ERROR
# Logbook
logging.level.org.zalando.logbook=TRACE
logbook.exclude=/actuator/**
logbook.strategy=without-body
# Jdbc
spring.datasource.url=jdbc:tc:postgresql:12.4:///spring-demo?TC_TMPFS=/testtmpfs:rw
# username and password is ignored when using testcontainers, but these are the actual values that can be used to
# connect to a running container DB, https://github.com/testcontainers/testcontainers-java/blob/testcontainers-1.2.1/modules/postgresql/src/main/java/org/testcontainers/containers/PostgreSQLContainer.java#L10-L12
spring.datasource.username=test
spring.datasource.password=test
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.liquibase.change-log=classpath:db.changelog/db.changelog-master.sql

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=${spring.application.name}
