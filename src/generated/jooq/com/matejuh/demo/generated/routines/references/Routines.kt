/*
 * This file is generated by jOOQ.
 */
package com.matejuh.demo.generated.routines.references


import com.matejuh.demo.generated.routines.Armor1
import com.matejuh.demo.generated.routines.Armor2
import com.matejuh.demo.generated.routines.Crypt
import com.matejuh.demo.generated.routines.Dearmor
import com.matejuh.demo.generated.routines.Decrypt
import com.matejuh.demo.generated.routines.DecryptIv
import com.matejuh.demo.generated.routines.Digest1
import com.matejuh.demo.generated.routines.Digest2
import com.matejuh.demo.generated.routines.Encrypt
import com.matejuh.demo.generated.routines.EncryptIv
import com.matejuh.demo.generated.routines.GenRandomBytes
import com.matejuh.demo.generated.routines.GenRandomUuid
import com.matejuh.demo.generated.routines.GenSalt1
import com.matejuh.demo.generated.routines.GenSalt2
import com.matejuh.demo.generated.routines.Hmac1
import com.matejuh.demo.generated.routines.Hmac2
import com.matejuh.demo.generated.routines.PgpKeyId
import com.matejuh.demo.generated.routines.PgpPubDecrypt1
import com.matejuh.demo.generated.routines.PgpPubDecrypt2
import com.matejuh.demo.generated.routines.PgpPubDecrypt3
import com.matejuh.demo.generated.routines.PgpPubDecryptBytea1
import com.matejuh.demo.generated.routines.PgpPubDecryptBytea2
import com.matejuh.demo.generated.routines.PgpPubDecryptBytea3
import com.matejuh.demo.generated.routines.PgpPubEncrypt1
import com.matejuh.demo.generated.routines.PgpPubEncrypt2
import com.matejuh.demo.generated.routines.PgpPubEncryptBytea1
import com.matejuh.demo.generated.routines.PgpPubEncryptBytea2
import com.matejuh.demo.generated.routines.PgpSymDecrypt1
import com.matejuh.demo.generated.routines.PgpSymDecrypt2
import com.matejuh.demo.generated.routines.PgpSymDecryptBytea1
import com.matejuh.demo.generated.routines.PgpSymDecryptBytea2
import com.matejuh.demo.generated.routines.PgpSymEncrypt1
import com.matejuh.demo.generated.routines.PgpSymEncrypt2
import com.matejuh.demo.generated.routines.PgpSymEncryptBytea1
import com.matejuh.demo.generated.routines.PgpSymEncryptBytea2
import com.matejuh.demo.generated.tables.PgpArmorHeaders

import java.util.UUID

import org.jooq.Configuration
import org.jooq.Field
import org.jooq.Record
import org.jooq.Result



/**
 * Call <code>public.armor</code>
 */
fun armor1(
      configuration: Configuration
    , __1: ByteArray?
): String? {
    val f = Armor1()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor1(
      __1: ByteArray?
): Field<String?> {
    val f = Armor1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor1(
      __1: Field<ByteArray?>
): Field<String?> {
    val f = Armor1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.armor</code>
 */
fun armor2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: Array<String?>?
    , __3: Array<String?>?
): String? {
    val f = Armor2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor2(
      __1: ByteArray?
    , __2: Array<String?>?
    , __3: Array<String?>?
): Field<String?> {
    val f = Armor2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor2(
      __1: Field<ByteArray?>
    , __2: Field<Array<String?>?>
    , __3: Field<Array<String?>?>
): Field<String?> {
    val f = Armor2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.crypt</code>
 */
fun crypt(
      configuration: Configuration
    , __1: String?
    , __2: String?
): String? {
    val f = Crypt()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.crypt</code> as a field.
 */
fun crypt(
      __1: String?
    , __2: String?
): Field<String?> {
    val f = Crypt()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.crypt</code> as a field.
 */
fun crypt(
      __1: Field<String?>
    , __2: Field<String?>
): Field<String?> {
    val f = Crypt()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.dearmor</code>
 */
fun dearmor(
      configuration: Configuration
    , __1: String?
): ByteArray? {
    val f = Dearmor()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.dearmor</code> as a field.
 */
fun dearmor(
      __1: String?
): Field<ByteArray?> {
    val f = Dearmor()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.dearmor</code> as a field.
 */
fun dearmor(
      __1: Field<String?>
): Field<ByteArray?> {
    val f = Dearmor()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.decrypt</code>
 */
fun decrypt(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = Decrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.decrypt</code> as a field.
 */
fun decrypt(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = Decrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.decrypt</code> as a field.
 */
fun decrypt(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = Decrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.decrypt_iv</code>
 */
fun decryptIv(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): ByteArray? {
    val f = DecryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.decrypt_iv</code> as a field.
 */
fun decryptIv(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): Field<ByteArray?> {
    val f = DecryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.decrypt_iv</code> as a field.
 */
fun decryptIv(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<ByteArray?>
    , __4: Field<String?>
): Field<ByteArray?> {
    val f = DecryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.digest</code>
 */
fun digest1(
      configuration: Configuration
    , __1: String?
    , __2: String?
): ByteArray? {
    val f = Digest1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest1(
      __1: String?
    , __2: String?
): Field<ByteArray?> {
    val f = Digest1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest1(
      __1: Field<String?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = Digest1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.digest</code>
 */
fun digest2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): ByteArray? {
    val f = Digest2()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest2(
      __1: ByteArray?
    , __2: String?
): Field<ByteArray?> {
    val f = Digest2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = Digest2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.encrypt</code>
 */
fun encrypt(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = Encrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.encrypt</code> as a field.
 */
fun encrypt(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = Encrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.encrypt</code> as a field.
 */
fun encrypt(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = Encrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.encrypt_iv</code>
 */
fun encryptIv(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): ByteArray? {
    val f = EncryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.encrypt_iv</code> as a field.
 */
fun encryptIv(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): Field<ByteArray?> {
    val f = EncryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.encrypt_iv</code> as a field.
 */
fun encryptIv(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<ByteArray?>
    , __4: Field<String?>
): Field<ByteArray?> {
    val f = EncryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.gen_random_bytes</code>
 */
fun genRandomBytes(
      configuration: Configuration
    , __1: Int?
): ByteArray? {
    val f = GenRandomBytes()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_random_bytes</code> as a field.
 */
fun genRandomBytes(
      __1: Int?
): Field<ByteArray?> {
    val f = GenRandomBytes()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.gen_random_bytes</code> as a field.
 */
fun genRandomBytes(
      __1: Field<Int?>
): Field<ByteArray?> {
    val f = GenRandomBytes()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.gen_random_uuid</code>
 */
fun genRandomUuid(
      configuration: Configuration
): UUID? {
    val f = GenRandomUuid()

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_random_uuid</code> as a field.
 */
fun genRandomUuid(): Field<UUID?> {
    val f = GenRandomUuid()

    return f.asField()
}

/**
 * Call <code>public.gen_salt</code>
 */
fun genSalt1(
      configuration: Configuration
    , __1: String?
): String? {
    val f = GenSalt1()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt1(
      __1: String?
): Field<String?> {
    val f = GenSalt1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt1(
      __1: Field<String?>
): Field<String?> {
    val f = GenSalt1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.gen_salt</code>
 */
fun genSalt2(
      configuration: Configuration
    , __1: String?
    , __2: Int?
): String? {
    val f = GenSalt2()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt2(
      __1: String?
    , __2: Int?
): Field<String?> {
    val f = GenSalt2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt2(
      __1: Field<String?>
    , __2: Field<Int?>
): Field<String?> {
    val f = GenSalt2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.hmac</code>
 */
fun hmac1(
      configuration: Configuration
    , __1: String?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = Hmac1()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac1(
      __1: String?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = Hmac1()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac1(
      __1: Field<String?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = Hmac1()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.hmac</code>
 */
fun hmac2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = Hmac2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = Hmac2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = Hmac2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_key_id</code>
 */
fun pgpKeyId(
      configuration: Configuration
    , __1: ByteArray?
): String? {
    val f = PgpKeyId()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_key_id</code> as a field.
 */
fun pgpKeyId(
      __1: ByteArray?
): Field<String?> {
    val f = PgpKeyId()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.pgp_key_id</code> as a field.
 */
fun pgpKeyId(
      __1: Field<ByteArray?>
): Field<String?> {
    val f = PgpKeyId()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt</code>
 */
fun pgpPubDecrypt1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
): String? {
    val f = PgpPubDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt1(
      __1: ByteArray?
    , __2: ByteArray?
): Field<String?> {
    val f = PgpPubDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt1(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
): Field<String?> {
    val f = PgpPubDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt</code>
 */
fun pgpPubDecrypt2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): String? {
    val f = PgpPubDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<String?> {
    val f = PgpPubDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<String?> {
    val f = PgpPubDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt</code>
 */
fun pgpPubDecrypt3(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): String? {
    val f = PgpPubDecrypt3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt3(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): Field<String?> {
    val f = PgpPubDecrypt3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt3(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
    , __4: Field<String?>
): Field<String?> {
    val f = PgpPubDecrypt3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt_bytea</code>
 */
fun pgpPubDecryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
): ByteArray? {
    val f = PgpPubDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea1(
      __1: ByteArray?
    , __2: ByteArray?
): Field<ByteArray?> {
    val f = PgpPubDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
): Field<ByteArray?> {
    val f = PgpPubDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt_bytea</code>
 */
fun pgpPubDecryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = PgpPubDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = PgpPubDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = PgpPubDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt_bytea</code>
 */
fun pgpPubDecryptBytea3(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): ByteArray? {
    val f = PgpPubDecryptBytea3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea3(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): Field<ByteArray?> {
    val f = PgpPubDecryptBytea3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea3(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
    , __4: Field<String?>
): Field<ByteArray?> {
    val f = PgpPubDecryptBytea3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt</code>
 */
fun pgpPubEncrypt1(
      configuration: Configuration
    , __1: String?
    , __2: ByteArray?
): ByteArray? {
    val f = PgpPubEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt1(
      __1: String?
    , __2: ByteArray?
): Field<ByteArray?> {
    val f = PgpPubEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt1(
      __1: Field<String?>
    , __2: Field<ByteArray?>
): Field<ByteArray?> {
    val f = PgpPubEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt</code>
 */
fun pgpPubEncrypt2(
      configuration: Configuration
    , __1: String?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = PgpPubEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt2(
      __1: String?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = PgpPubEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt2(
      __1: Field<String?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = PgpPubEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt_bytea</code>
 */
fun pgpPubEncryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
): ByteArray? {
    val f = PgpPubEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea1(
      __1: ByteArray?
    , __2: ByteArray?
): Field<ByteArray?> {
    val f = PgpPubEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
): Field<ByteArray?> {
    val f = PgpPubEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt_bytea</code>
 */
fun pgpPubEncryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = PgpPubEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = PgpPubEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = PgpPubEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt</code>
 */
fun pgpSymDecrypt1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): String? {
    val f = PgpSymDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt1(
      __1: ByteArray?
    , __2: String?
): Field<String?> {
    val f = PgpSymDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt1(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<String?> {
    val f = PgpSymDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt</code>
 */
fun pgpSymDecrypt2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
    , __3: String?
): String? {
    val f = PgpSymDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt2(
      __1: ByteArray?
    , __2: String?
    , __3: String?
): Field<String?> {
    val f = PgpSymDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<String?> {
    val f = PgpSymDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt_bytea</code>
 */
fun pgpSymDecryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): ByteArray? {
    val f = PgpSymDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea1(
      __1: ByteArray?
    , __2: String?
): Field<ByteArray?> {
    val f = PgpSymDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = PgpSymDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt_bytea</code>
 */
fun pgpSymDecryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = PgpSymDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea2(
      __1: ByteArray?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = PgpSymDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = PgpSymDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt</code>
 */
fun pgpSymEncrypt1(
      configuration: Configuration
    , __1: String?
    , __2: String?
): ByteArray? {
    val f = PgpSymEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt1(
      __1: String?
    , __2: String?
): Field<ByteArray?> {
    val f = PgpSymEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt1(
      __1: Field<String?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = PgpSymEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt</code>
 */
fun pgpSymEncrypt2(
      configuration: Configuration
    , __1: String?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = PgpSymEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt2(
      __1: String?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = PgpSymEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt2(
      __1: Field<String?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = PgpSymEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt_bytea</code>
 */
fun pgpSymEncryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): ByteArray? {
    val f = PgpSymEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea1(
      __1: ByteArray?
    , __2: String?
): Field<ByteArray?> {
    val f = PgpSymEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = PgpSymEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt_bytea</code>
 */
fun pgpSymEncryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = PgpSymEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea2(
      __1: ByteArray?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = PgpSymEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = PgpSymEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_armor_headers</code>.
 */
fun pgpArmorHeaders(
      configuration: Configuration
    , __1: String?
): Result<Record> = configuration.dsl().selectFrom(com.matejuh.demo.generated.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
      __1
)).fetch()

/**
 * Get <code>public.pgp_armor_headers</code> as a table.
 */
fun pgpArmorHeaders(
      __1: String?
): PgpArmorHeaders = com.matejuh.demo.generated.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
    __1
)

/**
 * Get <code>public.pgp_armor_headers</code> as a table.
 */
fun pgpArmorHeaders(
      __1: Field<String?>
): PgpArmorHeaders = com.matejuh.demo.generated.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
    __1
)
